# Creates virtual machines and installs a Kubernetes Cluster
# Make sure tha manager machine (which is the localhost) can be accessed
# Requires export PASSWORD=<password>

- name: Create virtual machines. Master and Workers
  gather_facts: no
  hosts: manager
  vars:
    image: "{{ lookup('env','HOME') }}/images/focal-server-cloudimg-amd64.img"
    imageSize: 50G
    rawSize: 10
    memory: 4096
    vcpu: 2
    pubKey: /home/francisco/.ssh/id_rsa.pub
    cmdPre: "../vm-installer/vm-install.sh --vm-index "
    cmdPost: "--base-image {{ image }} --size {{ imageSize }} --rawsize {{ rawSize}}  --pubkey {{ pubKey }} --memory {{ memory }} --cpu {{ vcpu }} --password "
  tasks:
    - name: Create Controller Virtual Machines
      ansible.builtin.script: 
      # cmd: "../vm-installer/vm-install.sh --vm-index 2 --base-image /home/francisco/images/focal-server-cloudimg-amd64.img --size 50G --rawsize 10 --pubkey /home/francisco/.ssh/id_rsa.pub --memory 4096 --cpu 2 --password {{lookup('env', 'PASSWORD')}}"
        cmd: "{{ cmdPre }} {{ item }} {{ cmdPost }} {{lookup('env', 'PASSWORD')}}"
      loop:
      - 2
      - 3
      - 4
      - 5

- name: Wait for all created virtual machines up
  gather_facts: no
  hosts: k8snodes
  tasks:
    - name: Wait for ansible connection.
      wait_for_connection:
        timeout: 180
        connect_timeout: 10
        sleep: 5

- name: Pre-install k8s in all nodes
  gather_facts: no
  hosts: k8snodes
  become: yes
  tasks:
    - name: K8S Node Preinstallation
      ansible.builtin.script: 
        cmd: ../k8s_preinstall_node.sh

- name: Copy kubeadm config file 
  gather_facts: no
  hosts: masters
  tasks: 
      - name: Copy kubeadm config file
        ansible.builtin.copy:
          src: ../kubeadm_init_config.yaml
          dest: .

# The output we want is in two lines. The first one ends with an \ character
- name: Kubeadm init
  gather_facts: no
  hosts: masters
  become: yes
  tasks:
    - name: Kubeadm init
      ansible.builtin.script: 
        cmd: "../k8s_init_cluster.sh"
      register: init_output
    - set_fact:
        init_command: "{{ init_output.stdout | regex_search('kubeadm join .+ --token [^\\\\]*') }} {{ init_output.stdout | regex_search('--discovery-token-ca-cert-hash .+') }}"

# The variable init_command, which was set as a fact for another group, so we cannot directly
# use it, but needs this hostvars... syntax.
- name: Join workers
  gather_facts: no
  hosts: workers
  become: yes
  tasks:
    - debug: 
        msg: "{{ hostvars[groups['masters'][0]]['init_command'] }}"
    - name: Join Cluster
      ansible.builtin.command: "{{ hostvars[groups['masters'][0]]['init_command'] }}"

# Copy kubeconfig file to local
- name: Kubeconfig
  gather_facts: no
  hosts: master
  become: yes
  tasks: 
    - ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: kubeconfig-fetched
        flat: yes

# Post installation tasks
- name: Configure networking
  gather_facts: no
  hosts: master
  tasks:
    - name: Configure networking
      ansible.builtin.script: 
        cmd: "../k8s_postinstall_network.sh"
        
# Post installation tasks
- name: Configure add-ons
  gather_facts: no
  hosts: master
  tasks:
    - name: Configure addons
      ansible.builtin.script: 
        cmd: "../k8s_postinstall_addons.sh"
        
        
