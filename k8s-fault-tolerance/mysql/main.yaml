# Secret for MYSQL_ROOT_PASSWORD
apiVersion: v1
kind: Secret
metadata:
  name: mysql
stringData:
  root-password: secret
---

# Configuration for main
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config-main
data:
  my.cnf: |
    [mysqld]
    skip-host-cache
    skip-name-resolve
    datadir=/var/lib/mysql
    socket=/var/run/mysqld/mysqld.sock
    secure-file-priv=/var/lib/mysql-files
    user=mysql

    pid-file=/var/run/mysqld/mysqld.pid

    # Added for GTID replication
    # MASTER
    # server-id = 1 Set dynamically
    log-bin = mysql-bin
    binlog_format = row
    gtid-mode=ON
    enforce-gtid-consistency=ON
    #log-slave-updates (this is by default)

    [client]
    socket=/var/run/mysqld/mysqld.sock

---

# Statefulset service
apiVersion: v1
kind: Service
metadata:
  name: mysql-main
spec:
  ports:
  - port: 3306
    name: mysql
  clusterIP: None
  selector:
    app: mysql-main
---

# Statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-main
spec:
  selector:
    matchLabels:
      app: mysql-main
  serviceName: mysql-main
  replicas: 1 
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      labels:
        app: mysql-main
    spec:   
      volumes:
      # Contains the mysql configuration
      - name: mysql-config
        emptyDir: {}
      # Contains the files to be copied to the configuration dir
      - name: mysql-config-common
        configMap:
          name: mysql-config-main
      initContainers:
      - name: init-mysql
        image: mysql:8.0.32
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Generate mysql server-id from pod ordinal index in stateful set
          [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          echo [mysqld] > /etc/mysql/conf.d/server-id.cnf
          # Set server-id
          echo "server-id=$((1 + $ordinal))" >> /etc/mysql/conf.d/server-id.cnf
          # Copy appropriate conf.d files from config-map to configuration directory
          cp /tmp/mysqlconfig/my.cnf /etc/mysql/conf.d/my.cnf

        volumeMounts:
        - name: mysql-config
          mountPath: /etc/mysql/conf.d    
        - name: mysql-config-common
          mountPath: /tmp/mysqlconfig 
      containers:
      - name: mysql
        image: mysql:8.0.32
        volumeMounts:
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
        - name: data
          mountPath: /var/lib/mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: root-password
              
---
# To expose the mysql port in the host
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: NodePort
  selector:
    app: mysql-main
  ports:
      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 3306
      targetPort: 3306
      # Optional field
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
      nodePort: 30006
                

        
        


